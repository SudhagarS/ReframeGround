{:use-macros nil, :excludes #{}, :name frontend.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, re-frame.core re-frame.core, views frontend.views, frontend.views frontend.views, frontend.handlers frontend.handlers, frontend.subs frontend.subs, dom goog.dom, goog.dom goog.dom}, :uses {atom reagent.core, dispatch-sync re-frame.core, dispatch re-frame.core}, :defs {mount-root {:protocol-inline nil, :meta {:file "/Users/shot/figgybox/frontend/src/frontend/core.cljs", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([]))}, :name frontend.core/mount-root, :variadic false, :file "/Users/shot/figgybox/frontend/src/frontend/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "/Users/shot/figgybox/frontend/src/frontend/core.cljs", :line 17, :column 7, :end-line 17, :end-column 12, :arglists (quote ([]))}, :name frontend.core/init!, :variadic false, :file "/Users/shot/figgybox/frontend/src/frontend/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialise-db}, :order [:initialise-db]}, :doc nil}